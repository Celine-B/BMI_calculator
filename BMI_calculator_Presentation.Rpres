The BMI calculator
========================================================
author: Celine B
date: February 07, 2021
autosize: true

Introduction
========================================================

This Shiny app is a simple calculator that calculates the Body Mass Index (BMI) and the corresponding weight status category for adults 20 years and older. 

The BMI is a person’s weight in kilograms divided by the square of height in meters. A high BMI can be an indicator of high body fatness. BMI can be used to screen for weight categories that may lead to health problems. There are 4 weight categories defined as follows:
  
- Underweight: BMI <18.5  
- Normal weight: BMI between 18.5 and 24.9  
- Overweight: BMI between 25 and 29.9  
- Obesity: BMI of 30 or greater  


*** 

``` {r bmi_plot, echo = FALSE}
ht = seq(1.3,2.2, length.out=500)
wt = seq(45,150, length.out=500)
wtht = expand.grid(x=ht, y=wt)
bmi = function(h,w) {(w)/(h*h)}
bmiwtht = matrix(bmi(wtht$x,wtht$y),length(ht),length(wt))

contour(ht,wt,bmiwtht,levels = c(18.5,25,30), drawlabels=FALSE,
        xlab="Height (meters)",ylab="Weight (kilograms)",
        main="BMI categories by height and weight")

text(1.45,90,"Obese",cex=2,srt=45)
text(1.7,80,"Overweight",cex=2,srt=40)
text(1.79,72,"Normal",cex=2,srt=35)
text(2.0,66,"Underweight",cex=2,srt=25)
```

How to use the application
========================================================
### Input values:
On the left panel, the user is invited to use the sliders to enter his height (in meters) and weight (in kilograms). 
  
Note that the application uses the International system of units (meters and kilograms):   
- 1 inch = 0.0254 meter  
- 1 pound = 0.454 kilogram
  
### Output:  
The BMI and the weight category will be calculated and displayed on the main panel:  
- The BMI is calculated by the bmi function that takes two arguments, height and weight, and returns a numerical value based on a simple formula:  
  
```{r bmi, eval = FALSE}
BMI = function(height,weight){
        return(weight/(height)^2)
}
```  


- The weight categories (“bmi_status”) will use the calculated BMI score (“bmi”) to indicate the weight category according to the categories defined on slide 2  


User interface code (ui.R)
========================================================
The following code defines the user interface which is how the application will look. We will have to enter 2 values: the height in meter and the weight in kilogram. Those 2 inputs values will be used to calculate the BMI score ("bmi") and the associated health status ("bmi_status") that will be displayed on the main panel:  

```{r ui, eval = FALSE}
library(shiny)
ui <- fluidPage(
    sidebarLayout(
        sidebarPanel(
            h4("Enter here your height and weight"),
            sliderInput('height', 'Your height (meters)', 1.3, 2.2, 1.6, 0.1),
            h6("note: 1 inch = 0.0254 meter"),
            h6(" "),
            sliderInput('weight', 'Your weight (Kilograms)', 45, 150, 60, 5),
            h6("note: 1 pound = 0.454 kilo")
        ),
        mainPanel(
            h2("BMI calculator"),
            textOutput("bmi"),
            textOutput("bmi_status")
        )
    )
)
```

server code (server.R)
========================================================
The following code defines the server logic required to calculate the BMI score ("bmi") and the associated weight category ("bmi_status"):  

```{r server, eval = FALSE}
server <- function(input, output) {
    r_bmi <- reactive({
        input$weight/(input$height^2)
    })
    r_bmi_status <- reactive({
        cut(r_bmi(), 
            breaks = c(0, 18.5, 24.9, 29.9, 70),
            labels = c('underweight', 'healthy', 'overweight', 'obese')
        )
    })
    output$bmi <- renderText({
        bmi <- r_bmi()
        paste("Your BMI score is", round(bmi, 1))
    })
    output$bmi_status <- renderText({
        bmi_status <- r_bmi_status()
        paste("You are", bmi_status)
    })
}
```
